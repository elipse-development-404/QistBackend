generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admins {
  id        Int       @id @default(autoincrement())
  fullName  String    @db.VarChar(255)
  email     String    @unique(map: "email") @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.DateTime(0)
}

model categories {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  description   String?         @db.Text
  created_at    DateTime        @default(now()) @db.Timestamp(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  isActive      Boolean?        @default(true)
  subcategories subcategories[]
  product       Product[]
}

model subcategories {
  id          Int        @id @default(autoincrement())
  category_id Int
  name        String     @db.VarChar(255)
  description   String?         @db.Text
  created_at  DateTime   @default(now()) @db.Timestamp(0)
  updated_at  DateTime   @default(now()) @db.Timestamp(0)
  isActive    Boolean?   @default(true)
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "subcategories_ibfk_1")
  product       Product[]


  @@index([category_id], map: "category_id")
}

model Product {
  id          Int          @id @default(autoincrement())
  category_id  Int?
  category    categories?      @relation(fields: [category_id], references: [id])
  subcategory_id  Int?
  subcategory    subcategories?      @relation(fields: [subcategory_id], references: [id])
  name        String
  brand       String?
  short_description String?       // short marketing description
  long_description String?         @db.Text
  price       Float
  stock       Int           @default(0)
  images      ProductImage[]

  // relations
 
  
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model ProductImage {
  id         Int     @id @default(autoincrement())
  url        String
  product    Product @relation(fields: [product_id], references: [id])
  product_id Int
}