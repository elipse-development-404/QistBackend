generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id                  Int                   @id @default(autoincrement())
  category_id         Int?
  subcategory_id      Int?
  name                String
  brand               String?
  short_description   String?
  long_description    String?               @db.Text
  stock               Boolean               @default(true)
  createdAt           DateTime?             @default(now())
  updatedAt           DateTime?             @default(now())
  is_approved         Boolean               @default(false)
  status              Boolean               @default(false)
  slugName            String?
  categories          categories?           @relation(fields: [category_id], references: [id], onDelete: Cascade)
  subcategories       subcategories?        @relation(fields: [subcategory_id], references: [id], onDelete: Cascade)
  ProductImage        ProductImage[]
  ProductInstallments ProductInstallments[]
  Deals               Deal[]                @relation("ProductToDeal")

  @@index([category_id], map: "Product_category_id_fkey")
  @@index([subcategory_id], map: "Product_subcategory_id_fkey")
}

model ProductImage {
  id         Int     @id @default(autoincrement())
  url        String
  product_id Int
  Product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)

  @@index([product_id], map: "ProductImage_product_id_fkey")
}

model ProductInstallments {
  id            Int      @id @default(autoincrement())
  product_id    Int
  advance       Float
  isActive      Boolean? @default(true)
  monthlyAmount Float
  months        Int
  totalPrice    Float
  dealId        Int?
  Product       Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  Deal          Deal?    @relation(fields: [dealId], references: [id], onDelete: Cascade)

  @@index([product_id], map: "ProductInstallments_product_id_fkey")
  @@index([dealId], map: "ProductInstallments_dealId_fkey")
}

model admins {
  id        Int       @id @default(autoincrement())
  fullName  String    @db.VarChar(255)
  email     String    @unique(map: "email") @db.VarChar(255)
  password  String    @db.VarChar(255)
  createdAt DateTime? @default(now()) @db.DateTime(0)
}

model categories {
  id            Int             @id @default(autoincrement())
  name          String          @db.VarChar(255)
  description   String?         @db.Text
  created_at    DateTime        @default(now()) @db.Timestamp(0)
  updated_at    DateTime        @default(now()) @db.Timestamp(0)
  isActive      Boolean?        @default(true)
  icon          String?         @db.Text
  slugName      String?
  Product       Product[]
  subcategories subcategories[]
}

model subcategories {
  id          Int        @id @default(autoincrement())
  category_id Int
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(0)
  updated_at  DateTime   @default(now()) @db.Timestamp(0)
  isActive    Boolean?   @default(true)
  description String?    @db.Text
  slugName    String?
  Product     Product[]
  categories  categories @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "subcategories_ibfk_1")

  @@index([category_id], map: "category_id")
}

model CreateOrder {
  id             Int       @id @default(autoincrement())
  email          String    @db.VarChar(255)
  phone          String    @db.VarChar(20)
  firstName      String    @db.VarChar(100)
  lastName       String    @db.VarChar(100)
  cnic           String    @db.VarChar(13)
  city           String    @db.VarChar(100)
  area           String    @db.VarChar(100)
  address        String    @db.Text
  orderNotes     String?   @db.Text
  paymentMethod  String    @db.VarChar(50)
  productName    String    @db.VarChar(255)
  totalDealValue Decimal   @db.Decimal(10, 2)
  advanceAmount  Decimal   @db.Decimal(10, 2)
  monthlyAmount  Decimal   @db.Decimal(10, 2)
  months         Int
  createdAt      DateTime? @default(now()) @db.Timestamp(0)
}

model Banner {
  id            Int      @id @default(autoincrement())
  image_url     String?
  cloudinary_id String?
  product_url   String
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Deal {
  id                  Int                   @id @default(autoincrement())
  name                String
  startDate           DateTime
  endDate             DateTime
  isActive            Boolean               @default(true)
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  productId           Int
  Product             Product               @relation("ProductToDeal", fields: [productId], references: [id], onDelete: Cascade)
  DealInstallments    DealInstallments[]
  ProductInstallments ProductInstallments[]

  @@index([productId], map: "Deal_productId_fkey")
}

model DealInstallments {
  id            Int      @id @default(autoincrement())
  dealId        Int
  totalPrice    Float
  monthlyAmount Float
  advance       Float
  months        Int
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  Deal          Deal     @relation(fields: [dealId], references: [id], onDelete: Cascade)

  @@index([dealId], map: "DealInstallments_dealId_fkey")
}
